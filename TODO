
 - variant descriptions

missing:
 - refresh auth0 token when it expires
   - runs into difficulties with checkSession() which seems to attempt to validate wrong email address
 - if 'JWT token expired' appears, shouldn't the tokens be deleted from localStorage?


improvements:
 - Use Firebase objects when they have been ported to 0.18:
   - http://package.elm-lang.org/packages/ThomasWeiser/elmfire/latest  @effect-manager
   - http://package.elm-lang.org/packages/ThomasWeiser/elmfire-extra/latest
   - https://discuss.atom.io/t/how-do-i-specify-a-branch-for-an-npm-package-in-dependencies/20452
   - https://stackoverflow.com/questions/16350673/depend-on-a-branch-or-tag-using-a-git-url-in-a-package-json/29595538
 - use Auth0 module http://package.elm-lang.org/packages/kkpoon/elm-auth0/2.0.0/Auth0
 - use dotenv for reading .env file?

consider:
 - disregard incomplete votes when showing total number of votes on pokemon?
 - replace tooltips with jQuery.Tooltip ?
 - swipe images in lightbox?
   {{{ /* swipe code */
    <script>
        var startX, startY;
        var gallery = document.querySelector('.lb-container');
        gallery.addEventListener('touchstart', function (e) {
            console.log('touch started');
            startX = e.changedTouches[0].clientX;
            startY = e.changedTouches[0].clientY;
        });

        gallery.addEventListener('touchend', function (e) {
            console.log('touch ended');
            var currentX = e.changedTouches[0].clientX,
                currentY = e.changedTouches[0].clientY,
                horizontal = Math.abs(startX - currentX),
                vertical = Math.abs(startY - currentY);
            if (horizontal > vertical) {
                if (currentX > startX) {
                    console.log('swiped right');
                } else {
                    console.log('swiped left');
                }
            }
        });

       gallery.addEventListener('touchmove', function(e) {
            console.log('touch moved');
            var currentX = e.changedTouches[0].clientX,
                currentY = e.changedTouches[0].clientY,
                horizontal = Math.abs(startX - currentX),
                vertical = Math.abs(startY - currentY);

            if (horizontal > vertical && e.cancelable) {
                e.preventDefault();
            }
        });
    </script>
    }}}
 - style (x) close button in input type="search"?
   {{{ /* input search style */
	input[type="search]::-webkit-search-decoration {
		-webkit-filter: invert(90%);
		filter: invert(90%);
	}
   }}}
 - make buttons clickable using space?
   {{{ /* space clicks button */
     $('a').keyup(function (ev) {
         if (ev.keyCode == 32) {
             ev.target.click();
         }
     });
   }}}

# vim: set fdm=marker foldenable:
